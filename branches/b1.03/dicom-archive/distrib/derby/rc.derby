#!/bin/sh

DERBY_HOME=/export/home/httpd/derby/db-derby-10.5.3.0-bin
export DERBY_HOME


pidfile='/export/home/httpd/derby/derby.pid'
ERRLOG='/export/home/httpd/derby/derby.errlog'
exec="/export/home/httpd/derby/db-derby-10.5.3.0-bin/bin/startNetworkServer"
USER='httpd'


#Это что б если че пойдет не так можно было найти процесс по полной строке запуска
debugName=TESTPID   


case "$1" in
  start)
	echo "Starting SOI server: "
	$0 status  

	#if SOI already started - exit
	if [ $? -eq 0 ]
	   then
	     echo "!!! Apache Derby already started !!!"
	     exit 1

	   else
	        rm -f $pidfile #del pidfile
		su $USER -c "$exec 1>>$ERRLOG &"
		echo "Apache Derby started!"
	 fi  
	;;
  stop)
	echo "Shutting down Apache Derby: "
	$0 status > /dev/null
	
	#if SOI is working. Stop it!
	if [ $? -eq 0 ]
	then 
		
		#get pid
		mypid=`cat $pidfile`

	    	#try goodexit
		kill $mypid
		#echo "Sleeping 5 seconds..."
		sleep 1
			
		#if not. Finish him! >:-)))
		proc=`ps -p $mypid |wc -l`	
	    if [ $proc -ne 1 ]
	     then 
	      kill -9 $mypid
	    fi                  

    	
    	#del pidfile
    	rm -f $pidfile
    else
    	#if soi not started 
    	echo "!!! Can't stop Apache Derby, because it's not work...!!!"    	
	fi
	;;
  status)
 	     
		 ls $pidfile  >>/dev/null 2>&1
		 if [ $? -eq 2 ]
		   then
		     echo "Status: Apache Derby not started. No pidfile."
		     exit 1
		   else
		    ########read pid from file	
		    	  mypid=`cat $pidfile`
		    	  if [ $mypid ]
					   then 
					       proc=`ps -p $mypid |wc -l`	
	
							if [ $proc -ne 1 ] 
							  then 
								echo "Status: Apache Derby is working. pid="$mypid 
								exit 0
				  		       else
						               echo "Status: Bad pid "$mypid
						               exit 1
				  			fi
					  	   else 
						       echo "Status: Bad pidfile="$pidfile
						       exit 1		
				
			 		 fi
		    	  
		    	  
		 fi	 
		 ;;
 
  # restart)
  #	$0 stop
  #	sleep 10
  #	$0 start
  #	echo
  #	;;
  *)
	echo "Usage: $0 {start|stop|status}"
	exit 1
esac




exit 0







  